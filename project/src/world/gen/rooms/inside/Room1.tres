[gd_resource type="Resource" load_steps=13 format=2]

[ext_resource path="res://src/world/gen/Room.gd" type="Script" id=1]
[ext_resource path="res://src/lambda/puzzle/PuzzleMenu.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/entities/RandomFact.gd" type="Script" id=3]
[ext_resource path="res://src/entities/PuzzleArea.gd" type="Script" id=4]
[ext_resource path="res://src/world/gen/RoomScene.gd" type="Script" id=5]
[ext_resource path="res://src/entities/PuzzleArea.tscn" type="PackedScene" id=6]
[ext_resource path="res://src/world/tiles/Inside.meshlib" type="MeshLibrary" id=7]
[ext_resource path="res://src/entities/RandomFact.tscn" type="PackedScene" id=8]
[ext_resource path="res://src/world/gen/RandomTile.gd" type="Script" id=9]

[sub_resource type="CylinderShape" id=3]
radius = 5.00249

[sub_resource type="CylinderShape" id=2]
height = 2.92612
radius = 6.53467

[sub_resource type="PackedScene" id=4]
_bundled = {
"conn_count": 0,
"conns": PoolIntArray(  ),
"editable_instances": [  ],
"names": PoolStringArray( "Room1", "script", "gridmap", "anchors", "entities", "edge_items", "Spatial", "GridMap", "mesh_library", "cell_center_y", "data", "__meta__", "RandomTile3", "transform", "visible", "child_map", "cell_center_x", "cell_center_z", "RandomTile4", "RandomTile5", "RandomTile6", "RandomTile7", "Entities", "OmniLight", "light_color", "light_energy", "omni_range", "OmniLight2", "ClosetPuzzle", "PuzzleMenu", "shape", "obj_name", "category", "fact_path", "RandomFact", "min_value", "max_value", "step", "value_name", "units", "Node", "CollisionShape", "BookCasePuzzle", "Camera" ),
"node_count": 22,
"node_paths": [  ],
"nodes": PoolIntArray( -1, -1, 6, 0, -1, 5, 1, 0, 2, 1, 3, 2, 4, 3, 5, 4, 0, 0, 0, 7, 7, -1, 4, 8, 5, 9, 6, 10, 7, 11, 8, 0, 1, 0, 6, 12, -1, 4, 13, 9, 14, 6, 1, 10, 15, 1, 0, 2, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 11, 11, 12, 0, 1, 0, 6, 18, -1, 4, 13, 13, 14, 6, 1, 10, 15, 1, 0, 4, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 14, 11, 15, 0, 1, 0, 6, 19, -1, 3, 13, 16, 1, 10, 15, 1, 0, 6, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 17, 11, 18, 0, 1, 0, 6, 20, -1, 4, 13, 19, 14, 6, 1, 10, 15, 1, 0, 8, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 20, 11, 21, 0, 1, 0, 6, 21, -1, 3, 13, 22, 1, 10, 15, 1, 0, 10, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 23, 11, 24, 0, 0, 0, 6, 22, -1, 0, 0, 12, 0, 23, 23, -1, 4, 13, 25, 24, 26, 25, 27, 26, 28, 0, 12, 0, 23, 27, -1, 4, 13, 29, 24, 26, 25, 27, 26, 28, 0, 12, 0, 6, 28, 30, 7, 13, 31, 1, 32, 29, 33, 30, 34, 31, 35, 32, 36, 33, 37, 0, 15, 0, 40, 34, 38, 6, 1, 39, 35, 40, 36, 41, 37, 42, 38, 43, 39, 44, 0, 15, 0, 41, 41, -1, 2, 13, 45, 30, 46, 0, 12, 0, 6, 42, 30, 7, 13, 47, 1, 32, 29, 33, 30, 34, 31, 48, 32, 49, 33, 37, 0, 18, 0, 40, 34, 38, 6, 1, 39, 35, 50, 36, 51, 37, 42, 38, 52, 39, 53, 0, 18, 0, 41, 41, -1, 2, 13, 54, 30, 55, 0, 0, 0, 43, 43, -1, 1, 13, 56, 0 ),
"variants": [ ExtResource( 5 ), NodePath("GridMap"), NodePath("Anchors"), NodePath("Entities"), [ 3, 4, 14 ], ExtResource( 7 ), false, {
"cells": PoolIntArray( 2, 0, 655382, 3, 0, 15, 4, 0, 14, 65529, 0, 1441806, 65530, 0, 655372, 65535, 0, 3, 196608, 0, 20, 196609, 0, 20, 196610, 0, 20, 196611, 0, 20, 196612, 0, 20, 262137, 0, 20, 262138, 0, 20, 262139, 0, 20, 262140, 0, 20, 262141, 0, 20, 262142, 0, 20, 262143, 0, 20, -65536, 0, 21, -65535, 0, 21, -65534, 0, 21, -65533, 0, 21, -6, 0, 1441813, -5, 0, 21, -4, 0, 21, -3, 0, 21, -2, 0, 21, -1, 0, 21, 0, 1, 14, 1, 1, 14, 2, 1, 14, 3, 1, 14, 4, 1, 14, 65529, 1, 1441806, 65530, 1, 1441806, 65531, 1, 14, 65532, 1, 14, 65533, 1, 14, 65535, 1, 14, 196608, 1, 20, 196609, 1, 20, 196610, 1, 20, 196611, 1, 20, 196612, 1, 20, 262137, 1, 20, 262138, 1, 20, 262139, 1, 20, 262140, 1, 20, 262141, 1, 20, 262142, 1, 20, 262143, 1, 20, -2, 1, 21, 0, 65531, 14, 1, 65531, 14, 2, 65531, 14, 3, 65531, 14, 4, 65531, 14, 65529, 65531, 1441806, 65530, 65531, 1441806, 65531, 65531, 14, 65532, 65531, 14, 65533, 65531, 14, 65534, 65531, 14, 65535, 65531, 14, 196608, 65531, 20, 196609, 65531, 20, 196610, 65531, 20, 196611, 65531, 20, 196612, 65531, 20, 262137, 65531, 20, 262138, 65531, 20, 262139, 65531, 20, 262140, 65531, 20, 262141, 65531, 20, 262142, 65531, 20, 262143, 65531, 20, 4, 65532, 14, 65529, 65532, 1441806, 65535, 65532, 3, 65537, 65532, 655378, 65538, 65532, 655378, 196608, 65532, 20, 196609, 65532, 20, 196610, 65532, 20, 196611, 65532, 20, 196612, 65532, 20, 262137, 65532, 20, 262138, 65532, 20, 262139, 65532, 20, 262140, 65532, 20, 262141, 65532, 20, 262142, 65532, 20, 262143, 65532, 20, -65536, 65532, 21, -65535, 65532, 21, -65534, 65532, 21, -65533, 65532, 21, -6, 65532, 1441813, -5, 65532, 21, -4, 65532, 21, -3, 65532, 21, -2, 65532, 21, -1, 65532, 21, 3, 65533, 1048582, 4, 65533, 14, 65529, 65533, 1441806, 65535, 65533, 3, 196608, 65533, 20, 196609, 65533, 20, 196610, 65533, 20, 196611, 65533, 20, 196612, 65533, 20, 262137, 65533, 20, 262138, 65533, 20, 262139, 65533, 20, 262140, 65533, 20, 262141, 65533, 20, 262142, 65533, 20, 262143, 65533, 20, -65536, 65533, 21, -65535, 65533, 21, -65534, 65533, 21, -65533, 65533, 21, -6, 65533, 1441813, -5, 65533, 21, -4, 65533, 21, -3, 65533, 21, -2, 65533, 21, -1, 65533, 21, 4, 65534, 14, 65529, 65534, 1441806, 65535, 65534, 3, 196608, 65534, 20, 196609, 65534, 20, 196610, 65534, 20, 196611, 65534, 20, 196612, 65534, 20, 262137, 65534, 20, 262138, 65534, 20, 262139, 65534, 20, 262140, 65534, 20, 262141, 65534, 20, 262142, 65534, 20, 262143, 65534, 20, -65536, 65534, 21, -65535, 65534, 21, -65534, 65534, 21, -65533, 65534, 21, -6, 65534, 1441813, -5, 65534, 21, -4, 65534, 21, -3, 65534, 21, -2, 65534, 21, -1, 65534, 21, 4, 65535, 14, 65529, 65535, 1441806, 65539, 65535, 1048593, 196608, 65535, 20, 196609, 65535, 20, 196610, 65535, 20, 196611, 65535, 20, 196612, 65535, 20, 262137, 65535, 20, 262138, 65535, 20, 262139, 65535, 20, 262140, 65535, 20, 262141, 65535, 20, 262142, 65535, 20, 262143, 65535, 20, -65536, 65535, 21, -65535, 65535, 21, -65534, 65535, 21, -65533, 65535, 21, -6, 65535, 1441813, -5, 65535, 21, -4, 65535, 21, -3, 65535, 21, -2, 65535, 21, -1, 65535, 21 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.969851, 0, -6.54123 ), ExtResource( 9 ), {
"cells": PoolIntArray( 0, 0, 1441818, 65536, 0, 1441792 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 1, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.08403, 0, -6.54123 ), {
"cells": PoolIntArray( 0, 0, 1441801, 65534, 0, 16 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -9.03015, 0, -1.54123 ), {
"cells": PoolIntArray( 0, 0, 1048615, 0, 1, 1048601 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -9.03015, 0, -5.54123 ), {
"cells": PoolIntArray( 0, 0, 1048600, 0, 1, 1048609 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -7.0603, 0, -3.08246 ), {
"cells": PoolIntArray( 0, 0, 10, 1, 0, 11 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -6.8055, 5.66369, -2.91084 ), Color( 0.901961, 0.847059, 0.729412, 1 ), 0.5, 10.64, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.47431, 5.66369, -3.22935 ), ExtResource( 6 ), Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.20818, 1.12475, -6.80031 ), ExtResource( 4 ), ExtResource( 2 ), NodePath("CollisionShape"), "Small Closet", "Arithmetic", NodePath("RandomFact"), ExtResource( 8 ), ExtResource( 3 ), 5.0, 10.0, 1.0, "Boots", " Pairs", Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.23774, 2.38419e-07, 3.88633 ), SubResource( 3 ), Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.5329, 1.5344, -5.99437 ), "Large Bookcase", "Sorting", 50.0, 100.0, "Swaps", " Required", Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5.65725, -2.38419e-07, 3.3359 ), SubResource( 2 ), Transform( 0.801181, 0.239434, -0.548435, 0, 0.916468, 0.400109, 0.598422, -0.32056, 0.734256, 2.95822, 2.95962, 0 ) ],
"version": 2
}

[resource]
script = ExtResource( 1 )
edges = [ Vector2( -1, 0 ), Vector2( -1, -4 ), Vector2( -1, -3 ), Vector2( -1, -2 ), Vector2( 4, 0 ), Vector2( -7, 0 ), Vector2( 0, 1 ), Vector2( 1, 1 ), Vector2( 2, 1 ), Vector2( 3, 1 ), Vector2( 4, 1 ), Vector2( -7, 1 ), Vector2( -6, 1 ), Vector2( -5, 1 ), Vector2( -4, 1 ), Vector2( -3, 1 ), Vector2( -1, 1 ), Vector2( 0, -5 ), Vector2( 1, -5 ), Vector2( 2, -5 ), Vector2( 3, -5 ), Vector2( 4, -5 ), Vector2( -7, -5 ), Vector2( -6, -5 ), Vector2( -5, -5 ), Vector2( -4, -5 ), Vector2( -3, -5 ), Vector2( -2, -5 ), Vector2( -1, -5 ), Vector2( 4, -4 ), Vector2( -7, -4 ), Vector2( 4, -3 ), Vector2( -7, -3 ), Vector2( 4, -2 ), Vector2( -7, -2 ), Vector2( 4, -1 ), Vector2( -7, -1 ) ]
anchors = [ [ Vector2( -2, 1 ), 2, Vector2( 0, 1 ) ] ]
tiles = [ Vector2( 2, 0 ), Vector2( 3, 0 ), Vector2( 4, 0 ), Vector2( -7, 0 ), Vector2( -6, 0 ), Vector2( -1, 0 ), Vector2( 0, 0 ), Vector2( 1, 0 ), Vector2( -5, 0 ), Vector2( -4, 0 ), Vector2( -3, 0 ), Vector2( -2, 0 ), Vector2( 0, 1 ), Vector2( 1, 1 ), Vector2( 2, 1 ), Vector2( 3, 1 ), Vector2( 4, 1 ), Vector2( -7, 1 ), Vector2( -6, 1 ), Vector2( -5, 1 ), Vector2( -4, 1 ), Vector2( -3, 1 ), Vector2( -1, 1 ), Vector2( -2, 1 ), Vector2( 0, -5 ), Vector2( 1, -5 ), Vector2( 2, -5 ), Vector2( 3, -5 ), Vector2( 4, -5 ), Vector2( -7, -5 ), Vector2( -6, -5 ), Vector2( -5, -5 ), Vector2( -4, -5 ), Vector2( -3, -5 ), Vector2( -2, -5 ), Vector2( -1, -5 ), Vector2( 4, -4 ), Vector2( -7, -4 ), Vector2( -1, -4 ), Vector2( 1, -4 ), Vector2( 2, -4 ), Vector2( 0, -4 ), Vector2( 3, -4 ), Vector2( -6, -4 ), Vector2( -5, -4 ), Vector2( -4, -4 ), Vector2( -3, -4 ), Vector2( -2, -4 ), Vector2( 3, -3 ), Vector2( 4, -3 ), Vector2( -7, -3 ), Vector2( -1, -3 ), Vector2( 0, -3 ), Vector2( 1, -3 ), Vector2( 2, -3 ), Vector2( -6, -3 ), Vector2( -5, -3 ), Vector2( -4, -3 ), Vector2( -3, -3 ), Vector2( -2, -3 ), Vector2( 4, -2 ), Vector2( -7, -2 ), Vector2( -1, -2 ), Vector2( 0, -2 ), Vector2( 1, -2 ), Vector2( 2, -2 ), Vector2( 3, -2 ), Vector2( -6, -2 ), Vector2( -5, -2 ), Vector2( -4, -2 ), Vector2( -3, -2 ), Vector2( -2, -2 ), Vector2( 4, -1 ), Vector2( -7, -1 ), Vector2( 3, -1 ), Vector2( 0, -1 ), Vector2( 1, -1 ), Vector2( 2, -1 ), Vector2( -6, -1 ), Vector2( -5, -1 ), Vector2( -4, -1 ), Vector2( -3, -1 ), Vector2( -2, -1 ), Vector2( -1, -1 ) ]
entities = SubResource( 4 )
