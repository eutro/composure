[gd_resource type="Resource" load_steps=13 format=2]

[ext_resource path="res://src/lambda/puzzle/PuzzleMenu.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/entities/PuzzleArea.gd" type="Script" id=2]
[ext_resource path="res://src/world/gen/Room.gd" type="Script" id=3]
[ext_resource path="res://src/world/tiles/Inside.meshlib" type="MeshLibrary" id=4]
[ext_resource path="res://src/entities/PuzzleArea.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/entities/RandomFact.tscn" type="PackedScene" id=6]
[ext_resource path="res://src/world/gen/RandomTile.gd" type="Script" id=7]
[ext_resource path="res://src/world/gen/RoomScene.gd" type="Script" id=8]
[ext_resource path="res://src/entities/RandomFact.gd" type="Script" id=9]

[sub_resource type="CylinderShape" id=1]
height = 3.69218
radius = 7.58426

[sub_resource type="CylinderShape" id=2]
height = 3.69218
radius = 4.79629

[sub_resource type="PackedScene" id=3]
_bundled = {
"conn_count": 0,
"conns": PoolIntArray(  ),
"editable_instances": [  ],
"names": PoolStringArray( "Room4", "script", "gridmap", "anchors", "entities", "edge_items", "Spatial", "GridMap", "mesh_library", "cell_center_y", "data", "__meta__", "RandomTile", "transform", "visible", "child_map", "cell_center_x", "cell_center_z", "RandomTile2", "Entities", "OmniLight", "light_color", "light_energy", "omni_range", "omni_attenuation", "OmniLight2", "VectorPuzzle", "PuzzleMenu", "shape", "obj_name", "category", "fact_path", "RandomFact", "min_value", "max_value", "step", "value_name", "units", "Node", "CollisionShape", "ArithPuzzle" ),
"node_count": 15,
"node_paths": [  ],
"nodes": PoolIntArray( -1, -1, 6, 0, -1, 5, 1, 0, 2, 1, 3, 2, 4, 3, 5, 4, 0, 0, 0, 7, 7, -1, 4, 8, 5, 9, 6, 10, 7, 11, 8, 0, 1, 0, 6, 12, -1, 4, 13, 9, 14, 6, 1, 10, 15, 1, 0, 2, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 11, 11, 12, 0, 1, 0, 6, 18, -1, 4, 13, 13, 14, 6, 1, 10, 15, 1, 0, 4, 0, 7, 7, -1, 6, 8, 5, 16, 6, 9, 6, 17, 6, 10, 14, 11, 15, 0, 0, 0, 6, 19, -1, 0, 0, 6, 0, 20, 20, -1, 5, 13, 16, 21, 17, 22, 18, 23, 19, 24, 20, 0, 6, 0, 20, 25, -1, 5, 13, 21, 21, 17, 22, 18, 23, 22, 24, 23, 0, 6, 0, 6, 26, 24, 7, 13, 25, 1, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 0, 9, 0, 38, 32, 32, 6, 1, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 0, 9, 0, 39, 39, -1, 2, 13, 39, 28, 40, 0, 6, 0, 6, 40, 24, 7, 13, 41, 1, 26, 27, 27, 28, 28, 29, 42, 30, 43, 31, 31, 0, 12, 0, 38, 32, 32, 6, 1, 33, 33, 44, 34, 45, 35, 36, 36, 46, 37, 47, 0, 12, 0, 39, 39, -1, 2, 13, 48, 28, 49, 0 ),
"variants": [ ExtResource( 8 ), NodePath("GridMap"), NodePath("Anchors"), NodePath("Entities"), [ 3, 4, 14 ], ExtResource( 4 ), false, {
"cells": PoolIntArray( 3, 0, 1441806, 65533, 0, 1441806, 196608, 0, 1441812, 196609, 0, 1441812, 196610, 0, 1441812, 196611, 0, 1441812, 262141, 0, 1441812, 262142, 0, 1441812, 262143, 0, 1441812, -65536, 0, 21, -65535, 0, 21, -65534, 0, 21, -2, 0, 21, -1, 0, 21, 0, 1, 1441806, 1, 1, 1441806, 2, 1, 1441806, 3, 1, 1441806, 65533, 1, 1441806, 65535, 1, 1441806, 196608, 1, 1441812, 196609, 1, 1441812, 196610, 1, 1441812, 196611, 1, 1441812, 262141, 1, 1441812, 262142, 1, 1441812, 262143, 1, 1441812, -2, 1, 21, 0, 65525, 1441806, 1, 65525, 1441806, 2, 65525, 1441806, 3, 65525, 1441806, 4, 65525, 1441806, 5, 65525, 1441806, 6, 65525, 1441806, 7, 65525, 1441806, 65533, 65525, 1441806, 65534, 65525, 1441806, 65535, 65525, 1441806, 196608, 65525, 1441812, 196609, 65525, 1441812, 196610, 65525, 1441812, 196611, 65525, 1441812, 196612, 65525, 1441812, 196613, 65525, 1441812, 196614, 65525, 1441812, 196615, 65525, 1441812, 262141, 65525, 1441812, 262142, 65525, 1441812, 262143, 65525, 1441812, 3, 65526, 29, 5, 65526, 1441819, 6, 65526, 29, 7, 65526, 1441806, 65533, 65526, 1441806, 65535, 65526, 23, 65538, 65526, 655377, 196608, 65526, 1441812, 196609, 65526, 1441812, 196610, 65526, 1441812, 196611, 65526, 1441812, 196612, 65526, 1441812, 196613, 65526, 1441812, 196614, 65526, 1441812, 196615, 65526, 1441812, 262141, 65526, 1441812, 262142, 65526, 1441812, 262143, 65526, 1441812, -65536, 65526, 21, -65535, 65526, 21, -65534, 65526, 21, -65533, 65526, 21, -65532, 65526, 21, -65531, 65526, 21, -65530, 65526, 21, -2, 65526, 21, -1, 65526, 21, 7, 65527, 1441806, 65533, 65527, 1441806, 196605, 65527, 1441810, 196606, 65527, 1441810, 196608, 65527, 1441812, 196609, 65527, 1441812, 196610, 65527, 1441812, 196611, 65527, 1441812, 196612, 65527, 1441812, 196613, 65527, 1441812, 196614, 65527, 1441812, 196615, 65527, 1441812, 262141, 65527, 1441812, 262142, 65527, 1441812, 262143, 65527, 1441812, -65536, 65527, 21, -65535, 65527, 21, -65534, 65527, 21, -65533, 65527, 21, -65532, 65527, 21, -65531, 65527, 21, -65530, 65527, 21, -2, 65527, 21, -1, 65527, 21, 2, 65528, 1441817, 7, 65528, 1441806, 65533, 65528, 1441806, 131075, 65528, 1441833, 196606, 65528, 1441810, 196608, 65528, 1441812, 196609, 65528, 1441812, 196610, 65528, 1441812, 196611, 65528, 1441812, 196612, 65528, 1441812, 196613, 65528, 1441812, 196614, 65528, 1441812, 196615, 65528, 1441812, 262141, 65528, 1441812, 262142, 65528, 1441812, 262143, 65528, 1441812, -65536, 65528, 21, -65535, 65528, 21, -65534, 65528, 21, -65533, 65528, 21, -65532, 65528, 21, -65531, 65528, 21, -65530, 65528, 21, -2, 65528, 21, -1, 65528, 21, 4, 65529, 655368, 7, 65529, 1441806, 65533, 65529, 1441806, 196608, 65529, 1441812, 196609, 65529, 1441812, 196610, 65529, 1441812, 196611, 65529, 1441812, 196612, 65529, 1441812, 196613, 65529, 1441812, 196614, 65529, 1441812, 196615, 65529, 1441812, 262141, 65529, 1441812, 262142, 65529, 1441812, 262143, 65529, 1441812, -65536, 65529, 21, -65535, 65529, 21, -65534, 65529, 21, -65533, 65529, 21, -65532, 65529, 21, -65531, 65529, 21, -65530, 65529, 21, -2, 65529, 21, -1, 65529, 21, 7, 65530, 1441806, 65533, 65530, 1441806, 65535, 65530, 655384, 196608, 65530, 1441812, 196609, 65530, 1441812, 196610, 65530, 1441812, 196611, 65530, 1441812, 196612, 65530, 1441812, 196613, 65530, 1441812, 196614, 65530, 1441812, 196615, 65530, 1441812, 262141, 65530, 1441812, 262142, 65530, 1441812, 262143, 65530, 1441812, -65536, 65530, 21, -65535, 65530, 21, -65534, 65530, 21, -65533, 65530, 21, -65532, 65530, 21, -65531, 65530, 21, -65530, 65530, 21, -2, 65530, 21, -1, 65530, 21, 5, 65531, 655399, 7, 65531, 1441806, 65533, 65531, 1441806, 196608, 65531, 1441812, 196609, 65531, 1441812, 196610, 65531, 1441812, 196611, 65531, 1441812, 196612, 65531, 1441812, 196613, 65531, 1441812, 196614, 65531, 1441812, 196615, 65531, 1441812, 262141, 65531, 1441812, 262142, 65531, 1441812, 262143, 65531, 1441812, -65536, 65531, 21, -65535, 65531, 21, -65534, 65531, 21, -65533, 65531, 21, -65532, 65531, 21, -65531, 65531, 21, -65530, 65531, 21, -2, 65531, 21, -1, 65531, 21, 3, 65532, 1441806, 4, 65532, 1441806, 5, 65532, 1441806, 6, 65532, 1441806, 7, 65532, 1441806, 65533, 65532, 1441806, 196608, 65532, 1441812, 196609, 65532, 1441812, 196610, 65532, 1441812, 196611, 65532, 1441812, 196612, 65532, 1441812, 196613, 65532, 1441812, 196614, 65532, 1441812, 196615, 65532, 1441812, 262141, 65532, 1441812, 262142, 65532, 1441812, 262143, 65532, 1441812, -65536, 65532, 21, -65535, 65532, 21, -65534, 65532, 21, -2, 65532, 21, -1, 65532, 21, 2, 65533, 1441799, 3, 65533, 1441806, 65533, 65533, 1441806, 131072, 65533, 1441833, 196608, 65533, 1441812, 196609, 65533, 1441812, 196610, 65533, 1441812, 196611, 65533, 1441812, 262141, 65533, 1441812, 262142, 65533, 1441812, 262143, 65533, 1441812, -65536, 65533, 21, -65535, 65533, 21, -65534, 65533, 21, -2, 65533, 21, -1, 65533, 21, 3, 65534, 1441806, 65533, 65534, 1441806, 196608, 65534, 1441812, 196609, 65534, 1441812, 196610, 65534, 1441812, 196611, 65534, 1441812, 262141, 65534, 1441812, 262142, 65534, 1441812, 262143, 65534, 1441812, -65536, 65534, 21, -65535, 65534, 21, -65534, 65534, 21, -2, 65534, 21, -1, 65534, 21, 2, 65535, 655369, 3, 65535, 1441806, 65533, 65535, 1441806, 196608, 65535, 1441812, 196609, 65535, 1441812, 196610, 65535, 1441812, 196611, 65535, 1441812, 262141, 65535, 1441812, 262142, 65535, 1441812, 262143, 65535, 1441812, -65536, 65535, 21, -65535, 65535, 21, -65534, 65535, 21, -2, 65535, 21, -1, 65535, 21 )
}, {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 2, 0 )
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.92653, 0, -15.1369 ), ExtResource( 7 ), {
"cells": PoolIntArray( 0, 0, 1441827, 2, 2, 655361, 2, 65534, 1441826 )
}, {
"_editor_clip_": 0
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.07347, 0, -6.1369 ), {
"cells": PoolIntArray( 2, 1, 1048583, 2, 2, 5, 3, 65535, 1441798 )
}, {
"_editor_clip_": 0
}, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.00428, 4.54745, -5.01079 ), Color( 0.9, 0.8487, 0.729, 1 ), 0.474, 12.2171, 0.965937, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.02048, 4.54745, -14.9808 ), 14.1632, 0.965937, ExtResource( 5 ), Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0629876, 1.28171, -18.3099 ), ExtResource( 2 ), ExtResource( 1 ), NodePath("CollisionShape"), "Sofa", "Vector", NodePath("RandomFact"), ExtResource( 6 ), ExtResource( 9 ), 7.0, 20.0, 1.0, "Space", " dimensions", Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.44841, 0, 5.35969 ), SubResource( 1 ), Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.10059, 1.28171, -0.904614 ), "Closet", "Arithmetic", 3.0, 10.0, "Colours", " unique", Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.59048, 0.0288675, -2.5706 ), SubResource( 2 ) ],
"version": 2
}

[resource]
script = ExtResource( 3 )
edges = [ Vector2( 3, 0 ), Vector2( -3, 0 ), Vector2( 0, 1 ), Vector2( 1, 1 ), Vector2( 2, 1 ), Vector2( 3, 1 ), Vector2( -3, 1 ), Vector2( -1, 1 ), Vector2( 0, -11 ), Vector2( 1, -11 ), Vector2( 2, -11 ), Vector2( 3, -11 ), Vector2( 4, -11 ), Vector2( 5, -11 ), Vector2( 6, -11 ), Vector2( 7, -11 ), Vector2( -3, -11 ), Vector2( -2, -11 ), Vector2( -1, -11 ), Vector2( 7, -10 ), Vector2( -3, -10 ), Vector2( 7, -9 ), Vector2( -3, -9 ), Vector2( 7, -8 ), Vector2( -3, -8 ), Vector2( 7, -7 ), Vector2( -3, -7 ), Vector2( 7, -6 ), Vector2( -3, -6 ), Vector2( 7, -5 ), Vector2( -3, -5 ), Vector2( 3, -4 ), Vector2( 4, -4 ), Vector2( 5, -4 ), Vector2( 6, -4 ), Vector2( 7, -4 ), Vector2( -3, -4 ), Vector2( 3, -3 ), Vector2( -3, -3 ), Vector2( 3, -2 ), Vector2( -3, -2 ), Vector2( 3, -1 ), Vector2( -3, -1 ) ]
anchors = [ [ Vector2( -2, 1 ), 2, Vector2( 0, 1 ) ] ]
tiles = [ Vector2( 3, 0 ), Vector2( -3, 0 ), Vector2( 0, 0 ), Vector2( 1, 0 ), Vector2( 2, 0 ), Vector2( -2, 0 ), Vector2( -1, 0 ), Vector2( 0, 1 ), Vector2( 1, 1 ), Vector2( 2, 1 ), Vector2( 3, 1 ), Vector2( -3, 1 ), Vector2( -1, 1 ), Vector2( -2, 1 ), Vector2( 0, -11 ), Vector2( 1, -11 ), Vector2( 2, -11 ), Vector2( 3, -11 ), Vector2( 4, -11 ), Vector2( 5, -11 ), Vector2( 6, -11 ), Vector2( 7, -11 ), Vector2( -3, -11 ), Vector2( -2, -11 ), Vector2( -1, -11 ), Vector2( 3, -10 ), Vector2( 5, -10 ), Vector2( 6, -10 ), Vector2( 7, -10 ), Vector2( -3, -10 ), Vector2( -1, -10 ), Vector2( 2, -10 ), Vector2( 0, -10 ), Vector2( 1, -10 ), Vector2( 4, -10 ), Vector2( -2, -10 ), Vector2( 7, -9 ), Vector2( -3, -9 ), Vector2( -2, -9 ), Vector2( 0, -9 ), Vector2( 1, -9 ), Vector2( 2, -9 ), Vector2( 3, -9 ), Vector2( 4, -9 ), Vector2( 5, -9 ), Vector2( 6, -9 ), Vector2( -1, -9 ), Vector2( 2, -8 ), Vector2( 7, -8 ), Vector2( -3, -8 ), Vector2( 3, -8 ), Vector2( -2, -8 ), Vector2( 0, -8 ), Vector2( 1, -8 ), Vector2( 4, -8 ), Vector2( 5, -8 ), Vector2( 6, -8 ), Vector2( -1, -8 ), Vector2( 4, -7 ), Vector2( 7, -7 ), Vector2( -3, -7 ), Vector2( 0, -7 ), Vector2( 1, -7 ), Vector2( 2, -7 ), Vector2( 3, -7 ), Vector2( 5, -7 ), Vector2( 6, -7 ), Vector2( -2, -7 ), Vector2( -1, -7 ), Vector2( 7, -6 ), Vector2( -3, -6 ), Vector2( -1, -6 ), Vector2( 0, -6 ), Vector2( 1, -6 ), Vector2( 2, -6 ), Vector2( 3, -6 ), Vector2( 4, -6 ), Vector2( 5, -6 ), Vector2( 6, -6 ), Vector2( -2, -6 ), Vector2( 5, -5 ), Vector2( 7, -5 ), Vector2( -3, -5 ), Vector2( 0, -5 ), Vector2( 1, -5 ), Vector2( 2, -5 ), Vector2( 3, -5 ), Vector2( 4, -5 ), Vector2( 6, -5 ), Vector2( -2, -5 ), Vector2( -1, -5 ), Vector2( 3, -4 ), Vector2( 4, -4 ), Vector2( 5, -4 ), Vector2( 6, -4 ), Vector2( 7, -4 ), Vector2( -3, -4 ), Vector2( 0, -4 ), Vector2( 1, -4 ), Vector2( 2, -4 ), Vector2( -2, -4 ), Vector2( -1, -4 ), Vector2( 2, -3 ), Vector2( 3, -3 ), Vector2( -3, -3 ), Vector2( 0, -3 ), Vector2( 1, -3 ), Vector2( -2, -3 ), Vector2( -1, -3 ), Vector2( 3, -2 ), Vector2( -3, -2 ), Vector2( 0, -2 ), Vector2( 1, -2 ), Vector2( 2, -2 ), Vector2( -2, -2 ), Vector2( -1, -2 ), Vector2( 2, -1 ), Vector2( 3, -1 ), Vector2( -3, -1 ), Vector2( 0, -1 ), Vector2( 1, -1 ), Vector2( -2, -1 ), Vector2( -1, -1 ) ]
entities = SubResource( 3 )
